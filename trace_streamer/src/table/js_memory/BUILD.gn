# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

import("../../../build/ts.gni")
ohos_source_set("js_memory_tables") {
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
  sources = [
    "js_config_table.cpp",
    "js_cpu_profiler_node_table.cpp",
    "js_cpu_profiler_sample_table.cpp",
    "js_heap_edges_table.cpp",
    "js_heap_files_table.cpp",
    "js_heap_info_table.cpp",
    "js_heap_location_table.cpp",
    "js_heap_nodes_table.cpp",
    "js_heap_sample_table.cpp",
    "js_heap_string_table.cpp",
    "js_heap_trace_function_info_table.cpp",
    "js_heap_trace_node_table.cpp",
  ]
  include_dirs = [
    "include",
    "../base/include",
    "${THIRD_PARTY}/sqlite/include",
    "${SRC}/base",
    "../../parser",
    "${SRC}/trace_data",
    "${SRC}/include",
    "${SRC}",
    "${THIRD_PARTY}/protobuf/src",
    "${THIRD_PARTY}/bounds_checking_function/include",
  ]
  include_dirs += [
    "${SRC}/trace_data/trace_stdtype",
    "${SRC}/trace_data/trace_stdtype/ftrace",
    "${SRC}/trace_data/trace_stdtype/ftrace/template",
    "${SRC}/trace_data/trace_stdtype/hilog",
    "${SRC}/trace_data/trace_stdtype/hiperf",
    "${SRC}/trace_data/trace_stdtype/hisysevent",
    "${SRC}/trace_data/trace_stdtype/htrace",
    "${SRC}/trace_data/trace_stdtype/measure",
  ]
  if (!is_independent_compile) {
    configs = [ "${TS_DIR}/gn:ts_config" ]
  }
  if (enable_ts_utest && !use_wasm) {
    cflags = [
      "-fprofile-arcs",
      "-ftest-coverage",
    ]
    ldflags = [
      "-fprofile-arcs",
      "-ftest-coverage",
      "--coverage",
    ]
    if (is_test) {
      cflags += [ "-D IS_UT" ]
    }
  }
}
